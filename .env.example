# Copy this file to `.env` and adjust values as needed
# Environment configuration for Greyhound Racing Predictor

# Flask / API
FLASK_APP=app.py
FLASK_ENV=development
PORT=5002

# UI/dev toggles
# Disable asset minification by default to avoid extra optional deps (jsmin/cssmin)
DISABLE_ASSET_MINIFY=1
# Hide the dev endpoints dropdown toolbar by default (set to 1 to enable in dev)
ENABLE_ENDPOINT_DROPDOWNS=0
# Hide main navbar dropdowns even in advanced mode (set to 1 to hide)
DISABLE_NAV_DROPDOWNS=0
# Testing mode off by default for local app runs (CI/tests set this themselves)
TESTING=false

# Database Configuration - Dual Database Architecture
# ===================================================
# The system uses separate databases for staging (writes) and analytics (reads)

# STAGING_DB_PATH: Used for write operations (ingestion, training, model registration)
# This database receives raw data from scrapers and CSV imports
STAGING_DB_PATH=./greyhound_racing_data_stage.db

# ANALYTICS_DB_PATH: Used for read operations (evaluation, prediction, analysis) 
# This database contains cleaned, validated data for ML training and analysis
ANALYTICS_DB_PATH=./greyhound_racing_data_analytics.db

# GREYHOUND_DB_PATH: Legacy fallback path (used when specific paths not set)
# Will be used by both staging and analytics operations if the specific paths aren't set
GREYHOUND_DB_PATH=./databases/comprehensive_greyhound_data.db

# Legacy database configuration (for backward compatibility)
DATABASE_PATH=greyhound_racing_data.db
# Optional compatibility for tools expecting SQLAlchemy-style URL
DATABASE_URL=sqlite:///greyhound_racing_data.db

# ML System Configuration
# ----------------------
# Controls ML model behavior and features
V4_MODEL=extratrees          # Model backend: 'extratrees' or 'lgbm'
V4_CALIB_METHOD=isotonic     # Calibration: 'isotonic', 'sigmoid', or 'none'
V4_MAX_RACES=1000           # Maximum races to load for training
TGR_ENABLED=1               # Enable TGR (The Greyhound Recorder) enhanced features

# TGR Scraper Configuration
# ------------------------
TGR_RATE_LIMIT=2.0          # Rate limit in seconds between requests
TGR_DISABLE_CACHE=0         # Set to 1 to disable caching, 0 to enable
SECRET_KEY=change-me

# Upcoming race CSVs directory (can be absolute or relative to project root)
# Default location used in docs: ./upcoming_races_temp
UPCOMING_RACES_DIR=./upcoming_races_temp

# OpenAI configuration (set in .env; overrides code defaults)
# Keep your API key secret; .env is gitignored.
# OPENAI_API_KEY={{OPENAI_API_KEY}}
OPENAI_MODEL=gpt-5
OPENAI_TEMPERATURE=0.3
OPENAI_MAX_TOKENS=2000
# Optional: enable live GPT usage in advisory and other flows
# OPENAI_USE_LIVE=1

# Logging / Debug
# DEBUG=1

